ARG BASE_IMAGE=${BASE_IMAGE}
FROM localhost/trellis-builder AS rootfs-builder

# Bootstrap early reuired packages.
RUN pacstrap -c -G -M /mnt \
	base \
	linux-firmware \
	dracut \
	intel-ucode \
	amd-ucode \
	wget

# Setup dracut
COPY rootfs-common/etc/dracut.conf.d/ostree.conf /mnt/etc/dracut.conf.d/
COPY rootfs-common/etc/dracut.conf.d/module-setup.sh /mnt/etc/dracut.conf.d/

# Add repo mirrors
RUN echo 'Server = https://geo.mirror.pkgbuild.com/$repo/os/$arch' > /mnt/etc/pacman.d/mirrorlist
RUN curl https://raw.githubusercontent.com/CachyOS/CachyOS-PKGBUILDS/master/cachyos-mirrorlist/cachyos-mirrorlist -o /mnt/etc/pacman.d/cachyos-mirrorlist

FROM localhost/trellis-builder AS pkg-builder
RUN build-aur \
	yay-bin \
	btrfsmaintenance

# Turn the pacstrapped rootfs into a container image.
FROM scratch AS base
COPY --from=rootfs-builder /mnt /

# Switch to CachyOS repos
COPY rootfs-base/etc/pacman.conf /etc/pacman.conf
RUN  pacman-key --init && \
	pacman-key --populate && \
	pacman-key --recv-keys F3B607488DB35A47 --keyserver keyserver.ubuntu.com && \
	pacman-key --lsign-key F3B607488DB35A47 && \
	pacman -Syy --noconfirm cachyos-keyring cachyos-mirrorlist &&\
	mv /etc/pacman.d/cachyos-mirrorlist.pacnew /etc/pacman.d/cachyos-mirrorlist && \
	pacman -Syu --noconfirm

FROM base AS v3

# Add CachyOS v3 Repos
RUN pacman -S --noconfirm cachyos-v3-mirrorlist
COPY rootfs-v3/etc/pacman.conf /etc/pacman.conf
RUN pacman -Syu --noconfirm

FROM base AS v4

# Add CachyOS v4 Repos
RUN pacman -S --noconfirm cachyos-v4-mirrorlist
COPY rootfs-v4/etc/pacman.conf /etc/pacman.conf
RUN pacman -Syu --noconfirm

# Common setup
FROM ${BASE_IMAGE} AS common

# Install packages
RUN pacman --noconfirm -S \
	linux-cachyos \
	efibootmgr \
	grub \
	ostree \
	podman \
	which \
	less \
	openssh \
	lsof \
	pigz \
	chrony \
	rust \
	systemd-resolvconf \
	zram-generator \
	zsh \
	ripgrep \
	python-pipx \
	logrotate \
	man-db \
	man-pages \
	neovim \
	bash-completion \
	btrfs-progs \
	distrobox \
	exfatprogs \
	hunspell-en_us \
	zip \
	unzip \
	bpftune-git \
	topgrade \
	sbctl

# Install built AUR packages.
COPY --from=pkg-builder /aur /aur
RUN pacman --noconfirm -U /aur/*
RUN rm -r /aur

# The rootfs can't be modified and systemd can't create them implicitly.
# That's why we have to create them as part of the rootfs.
RUN mkdir /efi

# Enable composefs for ostree root
COPY rootfs-common/usr/lib/ostree/prepare-root.conf /usr/lib/ostree/prepare-root.conf

# Set locale
RUN ln -sf /usr/share/zoneinfo/UTC /etc/localtime
RUN sed -i 's/^#\(en_US.UTF-8 UTF-8\)/\1/' /etc/locale.gen
RUN locale-gen

# Patch grub mkconfig
RUN sed -i "s|GRUB_DEVICE=\"\`\${grub_probe} --target=device /\`\"|GRUB_DEVICE=\"\`\${grub_probe} --target=device /sysroot\`\"|g" /usr/bin/grub-mkconfig

# Setup chrony
RUN systemctl disable systemd-timesyncd
RUN systemctl enable chronyd
COPY rootfs-common/etc/chrony.conf /etc/

# Configure DNS resolution
COPY rootfs-common/usr/lib/systemd/resolved.conf.d /usr/lib/systemd/
RUN systemctl enable systemd-resolved

# System tuning
COPY rootfs-common/usr/lib/sysctl.d/* /usr/lib/sysctl.d/
RUN systemctl enable bpftune

# Setup zram
COPY rootfs-common/usr/lib/systemd/zram-generator.conf /usr/lib/systemd/
RUN systemctl enable systemd-zram-setup@zram0

# Disable coredumps
COPY rootfs-common/usr/lib/systemd/system.conf.d /usr/lib/systemd/
COPY rootfs-common/usr/lib/systemd/user.conf.d /usr/lib/systemd/

# Setup topgrade
COPY rootfs-common/etc/topgrade.toml /etc/

# Copy user skel
COPY rootfs-common/etc/skel /etc/

# Setup trim and BTRFS Maintenance
RUN sed -i 's|BTRFS_BALANCE_MOUNTPOINTS="/"|BTRFS_BALANCE_MOUNTPOINTS="auto"|g' /etc/default/btrfsmaintenance && \
	sed -i 's|BTRFS_SCRUB_MOUNTPOINTS="/"|BTRFS_SCRUB_MOUNTPOINTS="auto"|g' /etc/default/btrfsmaintenance && \
	systemctl enable btrfs-balance.timer && \
	systemctl enable btrfs-scrub.timer && \
	systemctl enable btrfs-defrag.timer && \
	systemctl enable fstrim.timer

# Add some shell aliases
COPY rootfs-common/etc/profile.d/* /etc/profile.d/

# Blacklist some unused kernel modules
COPY rootfs-common/etc/modprobe.d/blacklist.conf /etc/modprobe.d

